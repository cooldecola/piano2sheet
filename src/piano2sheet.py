from cv2 import cv2
import numpy as np

#sample piano image from youtube
img = cv2.imread("piano_img.png")
#converting to gray
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
#edge detection 
edges = cv2.Canny(gray, 100,100, apertureSize=3)
#generating hough lines to identify keyboard
lines = cv2.HoughLines(edges, 1, np.pi/180, 400)

#empty list - will be added with pixels that correspond with 
#the lines generated by hough transform 
y_cord = []

#iterating through lines
for line in lines: 
    rho, theta = line[0]
    a = np.cos(theta)
    b = np.sin(theta)
    x0 = a * rho
    y0 = b * rho
    y_cord.append(y0) #appending to list
    x1 = int(x0 + 1500 * (-b))
    y1 = int(y0 + 1500 * (a))
    x2 = int(x0 - 1500 * (-b))
    y2 = int(y0 - 1500 * (a))
    cv2.line(img, (x1,y1), (x2,y2), (0,0,255),2)

#sorting list and getting rid of smallest value
y_cord.sort(reverse=True)
y_cord.pop()

#cropping the image based on y_cord list
crop_img = img[int(y_cord[1]):int(y_cord[0])]
crop_blur = cv2.cvtColor(crop_img, cv2.COLOR_BGR2GRAY)

#Using standard threshold to create contrast between white/black keys
_, th1 = cv2.threshold(crop_blur, 85, 150, cv2.THRESH_TOZERO)
cv2.imshow('threshold', th1)

edge_edge = cv2.Canny(th1, 100,100)
cv2.imshow('lol', edge_edge)

#cv2.imshow('cropped',crop_img)
cv2.imshow('img', img)
cv2.waitKey(0)
cv2.destroyAllWindows()